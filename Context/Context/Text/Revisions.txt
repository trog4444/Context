*** Commit
2019-11-21
    -- added Biapplicative to Writer (note: NOT adding bitraverse/bisequence)
    -- updated ReadMe

*** Commit
2019-11-18
    -- added Bifoldable MEMBERS to [Either, Writer]
    -- renamed .Bimap and .Dimap to .BiSelect and .DiSelect
    -- added .Select and .BiSelect to Writer

2019-11-15
    -- renamed 1st overload of '.Join' to '.Zip' to better match with C# (LINQ.Zip is == map2, not zipWith)
    -- removed GroupBy from Maybe (it wasnt really useful...)
    -- split type declarations into a separate file(&fsi) instead of 1 'Type' file for ease-of-use
        have methods for
            [Attr, Cont, Either, Maybe, Reader, State]
    -? Changed Maybe.Join method to basically (in C# query syntax) combine map2 and join

2019-11-13
    -- removed recM and changed fixM to take a `Either a (m a)` to combine fixM & recM into 1 function
    -- moved all types into a separate Types file (so that all functions can accessed by all other types)
    -- renamed case [Either, Maybe] to caseof (because 'case' appears in C# as @case)
    -- renamed Cont.exit to Cont.quitCC because 'exit' is already taken from F#..Operators

2019-11-12
    -- added recM to all
        [fixM :: Monad m => ((a -> m b) -> (m a -> m b) -> a -> m b) -> a   -> m b
         recM :: Monad m => ((a -> m b) -> (m a -> m b) -> a -> m b) -> m a -> m b]
    -- reset names of LINQ methods to LINQ names (Select instead of Map etc)
    -- added =>= and =<= operators
    -- in Arrow.Choice :> renamed feed1 and feed2 to feedl and feedr (and changed Choice to Either)
    -- added register function to Reader (to register events/callbacks)

2019-11-11
    -- renamed loopM to fixM
    -- removed compiled name attribute from unit
    -- added orElseWith as a lazy version of orElse [Either, Maybe]
    -- renamed nil to nix (Alternative)
    -- removed when_ from applicative, changed it to Alternative, and when the condition fails it returns nix (& f a, rather than f ())
    -- added concat to Alternative (DOES require nix)
    -- added all (?most) members to Maybe type

2019-11-10
    -- changed namespace from PTR to Rogz
    -- changed version to 1.0.2.1 from 1.0.2.0
    -- added .Match { Action(s) } to [Either, Maybe] for C# interop
    -- added wAttr to Attr
    -- removed Comonad loopW (it's just fix/Y)
    -- finished Writer
    -- removed concat and concatMap from Foldable

2019-11-08
    -- finished Either
    -- removed Foldable from Cont (*commented out)
    -- renamed zero to nil (Alternative)
    -- renamed mtimes to repeat
    -- fixed [append mconcat repeat] methods of [*Either Maybe]
    -- added Attr
    !! started Writer (need to do .fsi)

2019-11-07
    -- finished Reader
    -- optimized loopM for [Reader, State]
    ?? renamed Invariant to Attributed
    -- added Semigroup.append to all (currently) applicable types
    -- renamed Bifunctor stuff to mapFirst & mapSecond
    -- renamed Profunctor stuff to mapl & mapr

2019-11-06
    -- added Reader

2019-11-05
    -- added recur to Maybe
    -- added Typeclass txt file to act as template/guideline
    -- moved loopM, recur, fail here !!! to a 'Loop' "typeclass"

2019-11-03
    -- added recur to Either
    -- added (but not completed) [toChoice, ofChoice, toResult, ofResult] to Either

2019-11-01
    -- added State
    -- added 'Fn' to incomplete
    -- added Operators (changed Select2 to Join) (added Where = ?>)

2019-10-29
    -- stylistic adjustments (xml doc, spacing, etc, no actual functional changes)
    -- removed scan and scanBack
    -- added concat and concatMap to Maybe
    -- removed CompiledName attribute from most items, as they are not extension methods and not "good" for interop
        -- may change

2019-10-26
    -- added zero(mzero) to Maybe
    -- added append (Semigroup) to Maybe
    -- moved empty to Monoid and zero to Alternative

2019-10-25
    -- Added to Cont
    -- generalized type of fail here !!!
    -- optimized mloop ?

2019-10-24
    -- Added Cont

2019-10-19
    -- added guard to Maybe
    -- created Either

2019-10-18
    -- filled out most Maybe funcs

2019-10-17
    -- (re)created sln with new version of VS and .NET